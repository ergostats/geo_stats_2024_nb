---
title: "Matrices de pesos espaciales y autocorrelaci칩n"
format: html
editor: visual
---

# Matrices de vecindad

### Matriz de Vecindad Espacial

Una matriz de vecindad espacial, denotada como $W$, define una estructura de vecindad sobre toda la regi칩n de estudio, y sus elementos pueden ser vistos como pesos. El elemento $(i, j)$ de $W$, denotado como $w_{ij}$, conecta espacialmente las 치reas $i$ y $j$ de alguna manera. Se asocia m치s peso con las 치reas m치s cercanas a $i$ que con las que est치n m치s lejos de $i$.

#### Matriz Binaria de Vecindad Espacial Basada en Contig칲idad

Si los vecinos est치n basados en la contig칲idad, podemos construir una matriz espacial binaria con $w_{ij} = 1$ si las regiones $i$ y $j$ comparten una frontera com칰n, y $w_{ij} = 0$ en caso contrario. Habitualmente, $w_{ii}$ se establece en 0 para $i = 1, \ldots, n$. Esta elecci칩n de medida de proximidad resulta en una matriz espacial sim칠trica.

![](https://revistas.unal.edu.co/index.php/rcg/article/download/76919/version/61369/html/422727/v28n1a1f5.png){fig-align="center" width="80%"}

#### Otras Definiciones de Pesos Espaciales

Otras definiciones de pesos espaciales pueden incluir:

-   $w_{ij} = 1$ para todos $i$ y $j$ dentro de una distancia especificada.

-   $w_{ij} = 1$ si $j$ es uno de los $k$ vecinos m치s cercanos de $i$.

-   $w_{ij}$ puede definirse como la distancia inversa entre 치reas $w_{ij} = \frac{1}{d_{ij}}$.

Donde $d_{ij}$ es la distancia entre las unidades geogr치ficas $i$ y $j$.

-   Ejemplo: Si dos localidades est치n a 5 km de distancia, el peso ser칤a $w_{ij} = \frac{1}{5} = 0.2$. Si otra pareja de localidades est치 a 2 km, el peso ser칤a $w_{ij} = \frac{1}{2} = 0.5$

Adem치s, puede ser necesario ajustar el n칰mero total de vecinos en cada 치rea y usar una matriz estandarizada con entradas $w_{std, ij} = \frac{w_{ij}}{\sum_{j=1}^{n} w_{ij}}$.

Esto asegura:

1.  Cada elemento de la matriz $洧녥{std}$ se encuentre entre 0 y 1.
2.  Que la suma de cada una de sus filas sea siempre 1.

### Matriz de Pesos Espaciales Basada en una Lista de Vecinos Binaria

La funci칩n `nb2listw()` del paquete `spdep` se puede utilizar para construir una matriz de vecindad espacial que contenga los pesos espaciales correspondientes a una lista de vecinos. Los vecinos pueden ser binarios o basados en valores de distancia inversa. Para calcular una matriz de pesos espaciales basada en una lista de vecinos binaria, usamos la funci칩n `nb2listw()` con los siguientes argumentos:

-   **nb**: lista de vecinos.
-   **style**: indica el esquema de codificaci칩n elegido. Por ejemplo, `style = "B"` es la codificaci칩n binaria b치sica, y `style = "W"` es estandarizada por fila (1/n칰mero de vecinos).
-   **zero.policy**: se usa para tener en cuenta las regiones con 0 vecinos. Espec칤ficamente, `zero.policy = TRUE` permite que la lista de pesos contenga vectores de pesos de longitud cero, y `zero.policy = FALSE` detiene la funci칩n con un error si hay conjuntos de vecinos vac칤os.

### Ejemplo de Construcci칩n de Matriz de Vecindad

A continuaci칩n, se muestra un ejemplo de c칩mo construir una matriz de vecindad espacial basada en contig칲idad para tus zonas `dmq_zonas`.

#### Paso 1: Crear una Lista de Vecinos Basada en Contig칲idad

```{r}
# Crear lista de vecinos basada en contig칲idad
nb <- poly2nb(dmq_zonas, queen = TRUE)

# Verificar los primeros elementos de la lista de vecinos
print(nb[1:3])
```

#### Paso 2: Crear una Matriz de Pesos Espaciales Basada en Contig칲idad

```{r}
# Crear una matriz de pesos espaciales basada en contig칲idad y estandarizada por fila
nbw <- nb2listw(nb, style = "W", zero.policy = TRUE)

# Verificar los pesos de los primeros vecinos
print(nbw$weights[1:3])
```

#### Paso 3: Visualizar la Matriz de Pesos Espaciales

```{r}
# Convertir la lista de pesos espaciales en una matriz
m1 <- listw2mat(nbw)

# Visualizar la matriz de pesos espaciales
levelplot(t(m1),
          scales = list(y = list(at = seq(10, nrow(m1), by = 10),
                                 labels = seq(10, nrow(m1), by = 10))),
          main = "Matriz de Pesos Espaciales Basada en Contig칲idad")
```

### Matriz de Pesos Espaciales Basada en Valores de Distancia Inversa

Dada una lista de vecinos, podemos usar `nbdists()` para calcular las distancias a lo largo de los enlaces. Luego, podemos construir la lista con pesos espaciales basados en valores de distancia inversa usando `nb2listw()` donde el argumento `glist` es igual a una lista de pesos generales correspondientes a los vecinos.

#### Paso 1: Calcular los Centroides y las Distancias

```{r}
# Calcular los centroides de las zonas
centroids <- st_centroid(dmq_zonas)

# Calcular la lista de vecinos basada en contig칲idad
nb <- poly2nb(dmq_zonas, queen = TRUE)

# Calcular las distancias entre los centroides de las zonas vecinas
dists <- nbdists(nb, as.matrix(st_coordinates(centroids)))

# Calcular los pesos inversos de las distancias
ids <- map(dists, function(x) 1 / x)
```

#### Paso 2: Crear una Matriz de Pesos Espaciales Basada en Distancia Inversa

```{r}
# Crear una matriz de pesos espaciales basada en distancia inversa
nbw_inv <- nb2listw(nb, glist = ids, style = "B", zero.policy = TRUE)

# Verificar los pesos de los primeros vecinos
print(nbw_inv$weights[1:3])
```

#### Paso 3: Visualizar la Matriz de Pesos Espaciales Basada en Distancia Inversa

```{r}
# Convertir la lista de pesos espaciales en una matriz
m2 <- listw2mat(nbw_inv)

# Visualizar la matriz de pesos espaciales basada en distancia inversa
levelplot(t(m2),
          scales = list(y = list(at = seq(10, nrow(m2), by = 10),
                                 labels = seq(10, nrow(m2), by = 10))),
          main = "Matriz de Pesos Espaciales Basada en Distancia Inversa")
```

# Autocorrelaci칩n Espacial

La autocorrelaci칩n espacial se utiliza para describir en qu칠 medida una variable est치 correlacionada consigo misma a trav칠s del espacio. La autocorrelaci칩n espacial positiva se produce cuando las observaciones con valores similares est치n m치s pr칩ximas entre s칤 (es decir, agrupadas). La autocorrelaci칩n espacial negativa se produce cuando las observaciones con valores distintos est치n m치s pr칩ximas entre s칤 (es decir, dispersas).

![](https://www.researchgate.net/publication/345326470/figure/fig4/AS:960053502804001@1605906000766/Conceptual-models-of-spatial-autocorrelation-Positive-spatial-autocorrelation-a-is.png){fig-align="center" width="80%"}

La autocorrelaci칩n espacial puede evaluarse utilizando 칤ndices que resumen el grado en que observaciones similares tienden a producirse cerca unas de otras en el 치rea de estudio. Dos 칤ndices comunes que se utilizan para evaluar la autocorrelaci칩n espacial en datos areales son el **칤ndice global de Moran I y la C de Geary.**

## 칈ndice Global de Moran $I$

El 칈ndice Global de Moran $I$ se calcula mediante la f칩rmula:

$$I = \frac{n \sum_i \sum_j w_{ij} (Y_i - \bar{Y}) (Y_j - \bar{Y})}{\left( \sum_{i \neq j} w_{ij} \right) \sum_i (Y_i - \bar{Y})^2}$$

Donde

-   $n$ es el n칰mero total de regiones.

-   $Y_i$ representa el valor observado de la variable de inter칠s en la regi칩n $i$.

-   $\bar{Y}$ es la media de todos los valores.

-   Los pesos espaciales $w_{ij}$ indican la proximidad espacial entre las regiones $i$ y $j$, con $w_{ii} = 0$ y $i, j = 1, \ldots, n$. La definici칩n de los pesos espaciales var칤a seg칰n la variable estudiada y el contexto espec칤fico.

$I$ de Moran, **mide la similitud entre cada regi칩n y sus vecinas**. Bajo la hip칩tesis nula de no autocorrelaci칩n espacial, las observaciones $Y_i$ son independientes y est치n distribuidas de manera id칠ntica.

$$
E[I] = -\frac{1}{n-1}
$$

$$
\text{Var}[I] = \frac{n^2 (n-1) S_1 - n (n-1) S_2 + 2 S_0^2}{(n+1)(n-1)^2 S_0^2},
$$

Donde: $$S_0 = \sum_{i \neq j} w_{ij}$$ $$S_1 = \frac{1}{2} \sum_{i \neq j} (w_{ij} + w_{ji})^2$$

$$S_2 = \sum_k \left( \sum_j w_{kj} + \sum_i w_{ik} \right)^2$$

-   Los valores del 칤ndice de Moran $I$ suelen oscilar entre -1 y 1. Valores de $I$ significativamente superiores a $E[I] = -\frac{1}{n-1}$ indican autocorrelaci칩n espacial positiva o agrupamiento, lo que sugiere que las regiones vecinas tienden a tener valores similares.
-   Por otro lado, valores de $I$ significativamente inferiores a $E[I]$ indican autocorrelaci칩n espacial negativa o dispersi칩n, lo que implica que las regiones cercanas tienden a tener valores diferentes. Finalmente, valores de $I$ cercanos a $E[I]$ indican aleatoriedad, es decir, la ausencia de un patr칩n espacial.
-   Cuando el n칰mero de regiones es suficientemente grande, $I$ sigue una distribuci칩n normal, permitiendo evaluar si un patr칩n observado se desv칤a significativamente de un patr칩n aleatorio mediante la comparaci칩n del puntaje $z$ con la distribuci칩n normal est치ndar.

$$
z = \frac{I - E(I)}{\sqrt{\text{Var}(I)}}
$$

Podemos probar la autocorrelaci칩n espacial siguiendo estos pasos:

1.  Plantear las hip칩tesis nula y alternativa:

    -   $H_0: I = E[I]$ (no hay autocorrelaci칩n espacial),
    -   $H_1: I \neq E[I]$ (hay autocorrelaci칩n espacial).

2.  Elegir el nivel de significancia $\alpha$, que es el m치ximo valor permitido para la probabilidad de rechazar incorrectamente la hip칩tesis nula cuando es verdadera (usualmente $\alpha = 0.05$).

3.  Calcular la estad칤stica de prueba:

    -   $z = \frac{I - E(I)}{\sqrt{\text{Var}(I)}}$.

<!-- -->

4.  Encontrar el valor p para los datos observados comparando el puntaje z con la distribuci칩n normal est치ndar o mediante aleatorizaci칩n Monte Carlo. El valor p es la probabilidad de obtener una estad칤stica de prueba tan extrema o m치s extrema que la observada en la direcci칩n de la hip칩tesis alternativa, asumiendo que la hip칩tesis nula es verdadera.

5.  Tomar una de estas dos decisiones y formular una conclusi칩n:

    -   Si $\text{p-valor} < \alpha$, rechazamos la hip칩tesis nula. Concluimos que los datos proporcionan evidencia para la hip칩tesis alternativa.
    -   Si $\text{p-valor} \geq \alpha$, no rechazamos la hip칩tesis nula. Los datos no proporcionan evidencia suficiente para la hip칩tesis alternativa.

En R la funci칩n `moran.test()` del paquete `spdep` permite evaluar la autocorrelaci칩n espacial utilizando el 칤ndice $I$ de Moran. Los argumentos de `moran.test()` incluyen un vector num칠rico con los datos, una lista con los pesos espaciales y el tipo de hip칩tesis. El argumento que indica la hip칩tesis se llama `alternative` y puede configurarse como `greater` (por defecto), `less` o `two.sided` para representar diferentes hip칩tesis alternativas. En este ejemplo, planteamos las hip칩tesis nula y alternativa de la siguiente manera:

-   $H_0: I \leq E[I]$ (autocorrelaci칩n espacial negativa o no autocorrelaci칩n espacial),
-   $H_1: I > E[I]$ (autocorrelaci칩n espacial positiva).

Utilizamos `moran.test()` para probar esta hip칩tesis configurando `alternative = "greater"`. La lista con los pesos espaciales se obtiene primero identificando los vecinos de cada 치rea con la funci칩n `poly2nb()`, y luego creando una lista que contiene los vecinos con la funci칩n `nb2listw()` de `spdep`.
